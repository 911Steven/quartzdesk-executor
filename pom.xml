<?xml version="1.0"?>

<!--
  ~ Copyright (c) 2015-2017 QuartzDesk.com.
  ~ Licensed under the MIT license (https://opensource.org/licenses/MIT).
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.quartzdesk-executor</groupId>
  <artifactId>quartzdesk-executor-pom</artifactId>
  <packaging>pom</packaging>
  <version>2.8.1-SNAPSHOT</version>

  <parent>
    <groupId>com.quartzdesk-parent-pom</groupId>
    <artifactId>quartzdesk-parent-pom</artifactId>
    <version>1.0.0</version>
  </parent>

  <properties>
    <com.quartzdesk.version>2.8.1-SNAPSHOT</com.quartzdesk.version>

    <com.h2database.h2.version>1.3.170</com.h2database.h2.version>
    <org.hibernate.version>4.3.11.Final</org.hibernate.version>
    <org.quartz-scheduler.quartz.version>2.2.3</org.quartz-scheduler.quartz.version>
    <org.slf4j.version>1.7.21</org.slf4j.version>
    <org.springframework.version>4.3.0.RELEASE</org.springframework.version>
  </properties>

	<name>QuartzDesk Executor</name>

	<description>QuartzDesk Executor (QE) is a scalable and generic job scheduling application that can be used to schedule execution of native shell scripts (*.sh, *.bat, *.cmd, ...), executable files (*.exe, ...), SQL commands, HTTP POST requests etc. QE can be, for example, used as a replacement of traditional Unix/Linux Cron-based scheduling systems.</description>

  <inceptionYear>2015</inceptionYear>

  <organization>
    <name>QuartzDesk.com</name>
    <url>https://www.quartzdesk.com</url>
  </organization>

  <scm>
    <developerConnection>scm:svn:svn://scm.quartzdesk.com/quartzdesk/quartzdesk-executor/trunk</developerConnection>
    <connection>scm:svn:svn://scm.quartzdesk.com/quartzdesk/quartzdesk-executor/trunk</connection>
    <url>https://github.com/quartzdesk/quartzdesk-executor</url>
  </scm>

  <modules>
    <module>quartzdesk-executor-common</module>
    <module>quartzdesk-executor-dao</module>
    <module>quartzdesk-executor-domain</module>
    <module>quartzdesk-executor-core</module>
    <module>quartzdesk-executor-web</module>
  </modules>

  <dependencyManagement>
    <dependencies>

      <!-- QuartzDesk.com dependencies -->

      <!--
        QuartzDesk JVM Agent dependency is required for debugging the agent with the
        QuartzDesk Executor application.
      -->
      <dependency>
        <groupId>com.quartzdesk</groupId>
        <artifactId>quartzdesk-agent</artifactId>
        <version>${com.quartzdesk.version}</version>
      </dependency>

      <!--
        Library quartzdesk-api MUST be on the application runtime classpath in case
        the application is started in a JVM with the QuartzDesk JVM Agent. This library
        allows for relaying Quartz scheduler/job/trigger events and logging events
        to the QuartzDesk JVM Agent.
      -->
      <dependency>
        <groupId>com.quartzdesk</groupId>
        <artifactId>quartzdesk-api</artifactId>
        <version>${com.quartzdesk.version}</version>
      </dependency>


      <!-- 3rd party dependencies -->

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.1.7</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>1.1.7</version>
      </dependency>

      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${com.h2database.h2.version}</version>
      </dependency>

      <dependency>
        <groupId>com.jcraft</groupId>
        <artifactId>jsch</artifactId>
        <version>0.1.53</version>
      </dependency>

      <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>3.7</version>
      </dependency>

      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>1.8.3</version>

        <exclusions>
          <!-- Commons-logging API provided by the SLF4j jcl-over-slf4j bridge -->
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>3.2.1</version>
      </dependency>

      <dependency>
      	<groupId>commons-dbcp</groupId>
      	<artifactId>commons-dbcp</artifactId>
      	<version>1.4</version>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.1</version>
      </dependency>

      <dependency>
      	<groupId>org.apache.httpcomponents</groupId>
      	<artifactId>httpclient</artifactId>
      	<version>4.4.1</version>
      </dependency>

      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${org.hibernate.version}</version>
      </dependency>

      <dependency>
      	<groupId>javax.mail</groupId>
      	<artifactId>mail</artifactId>
      	<version>1.4.5</version>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.5</version>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>1.2</version>
      </dependency>

      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>2.1</version>
      </dependency>

      <dependency>
        <groupId>javaee</groupId>
        <artifactId>javaee-api</artifactId>
        <version>5</version>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
      </dependency>

      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjtools</artifactId>
        <version>1.6.10</version>
      </dependency>

      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>3.17.1-GA</version>
      </dependency>

      <dependency>
      	<groupId>org.jvnet.jaxb2_commons</groupId>
      	<artifactId>jaxb2-basics-runtime</artifactId>
      	<version>0.6.4</version>
      </dependency>

      <dependency>
        <groupId>org.quartz-scheduler</groupId>
        <artifactId>quartz</artifactId>
        <version>${org.quartz-scheduler.quartz.version}</version>

        <exclusions>
          <!--
            Log4j API provided by org.slf4j:log4j-over-slf4j.
          -->
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>

          <!--
            C3p0 JDBC connection pooling support not needed (Quartz configured to use an application
            server/container provided data source which is typically backed by a connection pool).
          -->
          <exclusion>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
          </exclusion>
        </exclusions>
      </dependency>


      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${org.slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${org.slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${org.slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${org.slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${org.slf4j.version}</version>
      </dependency>

      <!--
        Core utilities used by other modules.
        Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${org.springframework.version}</version>

        <exclusions>
          <!-- Commons-logging API provided by the SLF4j jcl-over-slf4j bridge -->
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!--
        Expression Language (depends on spring-core)
        Define this if you use Spring Expression APIs (org.springframework.expression.*)
      -->
      <!--
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-expression</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      -->

      <!--
        Bean Factory and JavaBeans utilities (depends on spring-core)
        Define this if you use Spring Bean APIs (org.springframework.beans.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
        Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
        Define this if you use Spring AOP APIs (org.springframework.aop.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
        Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
        This is the central artifact for Spring's Dependency Injection Container and is generally always defined
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
        Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
        Define this if you need any of these integrations
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
        JDBC Data Access Library (depends on core, beans, context, transaction)
        Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
        Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
        (depends on spring-core, spring-beans, spring-context, spring-tx)
        Define this if you need ORM (org.springframework.orm.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
        Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
        (depends on spring-core, spring-beans, spring-context)
        Define this if you need OXM (org.springframework.oxm.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
        Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
        Define this if you use Spring Transactions or DAO Exception Hierarchy
        (org.springframework.transaction.*/org.springframework.dao.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
        Web application development utilities applicable to both Servlet and Portlet Environments
        (depends on spring-core, spring-beans, spring-context)
        Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
        Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
        Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>

      <!--
        Support for testing Spring applications with tools such as JUnit and TestNG
        This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
      -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${org.springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>5.14.7</version>
      </dependency>

    </dependencies>
  </dependencyManagement>


  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.6</version>
        </plugin>


        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>


        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.7</version>
        </plugin>


        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <archive>
              <!--
                Generates the META-INF/INDEX.LIST resource containing the list of all packages contained in the
                JAR archive. This resource is required by Stripes action resolution framework to discover all
                ActionBeans in a deployed WAR/EAR under IBM WebSphere. Without this setting, ActionBeans located
                outside WEB-INF/classes may not be found.
              -->
              <index>true</index>
              <manifest>
                <addDefaultImplementationEntries>false</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <!--
                  build.date is set by the maven-buildmetadata-plugin
                -->
                <!--suppress MavenModelInspection -->
                <Build-Date>${build.date}</Build-Date>
                <Build-Number>${build.number}</Build-Number>

                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Vendor-Id>${vendor.id}</Implementation-Vendor-Id>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                <Implementation-Vendor-URL>${project.organization.url}</Implementation-Vendor-URL>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>


        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.8.1</version>
        </plugin>


        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.2.2</version>
        </plugin>


        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>1.6</version>
        </plugin>


        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.2</version>
        </plugin>


        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.5</version>
        </plugin>


        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.2</version>
          <configuration>
            <archive>
              <!--
                Generates the META-INF/INDEX.LIST resource containing the list of all packages contained in the
                JAR archive. This resource is required by Stripes action resolution framework to discover all
                ActionBeans in a deployed WAR/EAR under IBM WebSphere. Without this setting, ActionBeans located
                outside WEB-INF/classes may not be found.
              -->
              <index>true</index>
              <manifest>
                <addDefaultImplementationEntries>false</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <!--
                  build.date is set by the maven-buildmetadata-plugin
                -->
                <!--suppress MavenModelInspection -->
                <Build-Date>${build.date}</Build-Date>

                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Version>${project.version}</Implementation-Version>
                <Implementation-Vendor-Id>${vendor.id}</Implementation-Vendor-Id>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                <Implementation-Vendor-URL>${project.organization.url}</Implementation-Vendor-URL>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>


        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.7</version>
        </plugin>


        <plugin>
          <groupId>org.jvnet.jaxb2.maven2</groupId>
          <artifactId>maven-jaxb2-plugin</artifactId>
          <version>0.8.0</version>

          <dependencies>
            <!--
              Required JAXB2 plugin to generate getters for boolean properties.
              JAXB2 implementation shipped with JDK1.6 that is used to compile the
              project generates only "is" getter and it makes the boolean property
              invisible to various frameworks used in the projects (e.g. Jacson,
              JSTL etc.).
            -->
            <dependency>
              <groupId>com.nebulent.xjc</groupId>
              <artifactId>boolean-getter</artifactId>
              <version>0.5</version>
            </dependency>

            <!-- Support for -Xfluent-api -->
            <dependency>
              <groupId>net.java.dev.jaxb2-commons</groupId>
              <artifactId>jaxb-fluent-api</artifactId>
              <version>2.1.8</version>
            </dependency>

            <!-- Support for -Xcopyable xjc argument -->
            <dependency>
              <groupId>org.jvnet.jaxb2_commons</groupId>
              <artifactId>jaxb2-basics</artifactId>
              <version>0.6.4</version>
            </dependency>

            <!--
              Required JAXB2 plugin to generate setters for collections. Collection
              setters are expected by various frameworks most notably the Dozer framework.
            -->
            <dependency>
            	<groupId>net.java.dev.vcc.thirdparty</groupId>
            	<artifactId>collection-setter-injector</artifactId>
            	<version>0.5.0-1</version>
            </dependency>
          </dependencies>
        </plugin>


        <plugin>
          <groupId>de.smartics.maven.plugin</groupId>
          <artifactId>maven-buildmetadata-plugin</artifactId>
          <version>1.1.3</version>
          <configuration>
            <!--
            <hideCommandLineInfo>false</hideCommandLineInfo>
            <logLevel>FINEST</logLevel>
            -->
            <addScmInfo>false</addScmInfo>
            <buildDatePattern>yyyy-MM-dd</buildDatePattern>
            <forceNewProperties>true</forceNewProperties>
            <properties>
              <!-- build.number is set in the parent POM -->
              <property>
                <name>build.number</name>
                <section>build</section>
              </property>
              <property>
                <name>project.name</name>
                <section>project</section>
              </property>
              <property>
                <name>project.version</name>
                <section>project</section>
              </property>
              <property>
                <name>vendor.id</name>
                <section>project</section>
              </property>
              <property>
                <name>project.organization.name</name>
                <section>project</section>
              </property>
              <property>
                <name>project.organization.url</name>
                <section>project</section>
              </property>
            </properties>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <tagBase>svn://scm.quartzdesk.com/quartzdesk/quartzdesk-executor/tags</tagBase>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <preparationGoals>-Dmaven.test.skip=true clean verify</preparationGoals>
          <goals>-Dmaven.test.skip=true install</goals>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
